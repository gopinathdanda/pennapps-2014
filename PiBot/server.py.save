#! /usr/bin/python
import pennapprobot
import pennappcam
import struct
import socket
import argparse
import json
try:
    import SocketServer
except ImportError:
    import socketserver as SocketServer

try:
    json_data=open('settings.json')
    settings = json.load(json_data)
    json_data.close()
except IOError:
    print("Please run setup-stuff.py")
    exit(1)

# get the arguments
parser = argparse.ArgumentParser()
parser.add_argument("-i", "--ip", type=str, help="IP address or hostname of the server you want to connect to. Default is the device's current external ip.", default="")
parser.add_argument("-p", "--port", type=int, help="Port you want to connect to. Default is in settings.json.", default=int(settings['port']))
args = parser.parse_args()
global FLAG_L
global FLAG_U
FLAG_L = 0
FLAG_U = 0

class MyTCPHandler(SocketServer.BaseRequestHandler):

    def handle(self):
        self.data = self.request.recv(1024).strip()
        global FLAG_L
        global FLAG_U

        print("{0} wrote {1}.".format(self.client_address[0], ord(self.data)))
        # TODO handle data
	
        #0 1 2 3 4 is movement of bot
        #0 for rest, 1 for fwd, 2 for back, 3 for turnLeft, 4 for turnRight
        #5 6 7 8 is movement of webcam arms
        #5 for lookLeft, 6 for lookRight, 7 for lookUp, 8 for lookDown
        if ord(self.data) == 49:
                pennapprobot.move_forward()
        elif ord(self.data) == 50:
                pennapprobot.move_backward()
        elif ord(self.data) == 51:
                pennapprobot.turn_left()
        elif ord(self.data) == 52:
                pennapprobot.turn_right()
        #CHANGE PORT!!!
        elif ord(self.data) == 53 and FLAG_L > -6:
                pennappcam.lower_l()
                FLAG_L-=1
        elif ord(self.data) == 54 and FLAG_L < 6:
                pennappcam.lower_r()
                FLAG_L+=1
        elif ord(self.data) == 55 and FLAG_U > -1:
                pennappcam.upper_b()
                FLAG_U-=1
        elif ord(self.data) == 56 and FLAG_U < 3:
                pennappcam.upper_f()
                FLAG_U+=1
        else:
                print("Nothing found")
        print("{0},{1}".format(FLAG_L,FLAG_U))		

# hack to the the pi's external ip
#if args.ip is None or len(args.ip) < 1:
#    dummy_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
#    dummy_socket.connect(('8.8.8.8', 80))
#    host = dummy_socket.getsockname()[0]
#
    dummy_socket.close()
else:
    host = args.ip

server = SocketServer.TCPServer((host, settings['port']), MyTCPHandler)

print("TCPServer listening at {0}:{1}".format(host, settings['port']))
server.serve_forever()
